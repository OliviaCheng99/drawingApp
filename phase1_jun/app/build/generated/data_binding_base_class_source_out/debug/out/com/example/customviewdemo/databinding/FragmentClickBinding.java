// Generated by view binder compiler. Do not edit!
package com.example.customviewdemo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.customviewdemo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentClickBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonDraw;

  @NonNull
  public final TextView colorLabel;

  @NonNull
  public final TextView shapeLabel;

  @NonNull
  public final TextView sizeLabel;

  @NonNull
  public final Spinner spinnerColor;

  @NonNull
  public final Spinner spinnerShape;

  @NonNull
  public final Spinner spinnerSize;

  private FragmentClickBinding(@NonNull ConstraintLayout rootView, @NonNull Button buttonDraw,
      @NonNull TextView colorLabel, @NonNull TextView shapeLabel, @NonNull TextView sizeLabel,
      @NonNull Spinner spinnerColor, @NonNull Spinner spinnerShape, @NonNull Spinner spinnerSize) {
    this.rootView = rootView;
    this.buttonDraw = buttonDraw;
    this.colorLabel = colorLabel;
    this.shapeLabel = shapeLabel;
    this.sizeLabel = sizeLabel;
    this.spinnerColor = spinnerColor;
    this.spinnerShape = spinnerShape;
    this.spinnerSize = spinnerSize;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentClickBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentClickBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_click, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentClickBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_draw;
      Button buttonDraw = ViewBindings.findChildViewById(rootView, id);
      if (buttonDraw == null) {
        break missingId;
      }

      id = R.id.colorLabel;
      TextView colorLabel = ViewBindings.findChildViewById(rootView, id);
      if (colorLabel == null) {
        break missingId;
      }

      id = R.id.shapeLabel;
      TextView shapeLabel = ViewBindings.findChildViewById(rootView, id);
      if (shapeLabel == null) {
        break missingId;
      }

      id = R.id.sizeLabel;
      TextView sizeLabel = ViewBindings.findChildViewById(rootView, id);
      if (sizeLabel == null) {
        break missingId;
      }

      id = R.id.spinner_color;
      Spinner spinnerColor = ViewBindings.findChildViewById(rootView, id);
      if (spinnerColor == null) {
        break missingId;
      }

      id = R.id.spinner_shape;
      Spinner spinnerShape = ViewBindings.findChildViewById(rootView, id);
      if (spinnerShape == null) {
        break missingId;
      }

      id = R.id.spinner_size;
      Spinner spinnerSize = ViewBindings.findChildViewById(rootView, id);
      if (spinnerSize == null) {
        break missingId;
      }

      return new FragmentClickBinding((ConstraintLayout) rootView, buttonDraw, colorLabel,
          shapeLabel, sizeLabel, spinnerColor, spinnerShape, spinnerSize);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
